---
- name: Checking whether netdata service is present or not
  service_facts:
- name: Downloading netdata repository [Ubuntu]
  get_url:
    url: https://packagecloud.io/install/repositories/netdata/netdata/script.deb.sh
    dest: /tmp/script.sh
    mode: 0744
  when: 'not ("netdata.service" in ansible_facts.services) and
        (ansible_facts["distribution"] == "Ubuntu")'
- name: Downloading netdata repository [Centos]
  get_url:
    url: https://packagecloud.io/install/repositories/netdata/netdata/script.rpm.sh
    dest: /tmp/script.sh
    mode: 0744
  when: 'not ("netdata.service" in ansible_facts.services) and
        (ansible_facts["distribution"] == "CentOS")'
- name: Running netdata repository script 
  shell: /tmp/script.sh
  when: 'not ("netdata.service" in ansible_facts.services)'
- name: installing epel-release [CentOS]
  yum:
    name: epel-release
    state: latest
    disable_gpg_check: yes
  when: 'not ("netdata.service" in ansible_facts.services) and 
        (ansible_facts["distribution"] == "CentOS")'
- name: installing netdata using package manager [Ubuntu]
  apt:
    name: netdata={{netdata_version_apt}}
    state: present
    allow_unauthenticated: yes
  when: 'not ("netdata.service" in ansible_facts.services) and 
        (ansible_facts["distribution"] == "Ubuntu")'
- name: Adding firewall rules [CentOS]
  firewalld:
    port: 19999/tcp
    permanent: yes
    zone: public
    state: enabled
  when: 'not ("netdata.service" in ansible_facts.services) and 
        (ansible_facts["distribution"] == "CentOS")'
- name: Creating backup of previous netdata systemd backup
  copy: 
    src: /lib/systemd/system/netdata.service
    dest: /lib/systemd/system/netdata_old.service
    remote_src: yes
  ignore_errors: yes 
- name: stoping current netdata unit
  systemd:
    name: netdata
    state: stopped
- name: Downloading Netdata prebuild script
  get_url:
    url: https://my-netdata.io/kickstart-static64.sh
    dest: /tmp/kickstart-static64.sh
    mode: 0744
- name: Executing netdata prebuild installer
  shell: /tmp/kickstart-static64.sh --non-interactive
